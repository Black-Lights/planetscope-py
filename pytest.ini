[tool:pytest]
# Pytest configuration for planetscope-py

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=planetscope_py
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=90

# Minimum version requirements
minversion = 7.0

# Markers for test categorization
markers =
    unit: Unit tests for individual functions
    integration: Integration tests for multiple components  
    auth: Authentication-related tests
    validation: Input validation tests
    slow: Slow-running tests that may make network calls
    network: Tests that require network access
    config: Configuration tests
    utils: Utility tests
    exceptions: Exception tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*shapely.*:UserWarning

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = planetscope_py
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */myvenv/*
    */.pytest_temp/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod