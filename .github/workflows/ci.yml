# .github/workflows/ci.yml
name: PlanetScope-py CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
   
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
   
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
   
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
   
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
   
    - name: Code formatting check (Black)
      run: |
        black --check planetscope_py/ tests/
   
    - name: Linting (Ruff)
      run: |
        ruff check planetscope_py/ tests/
   
    - name: Type checking (MyPy)
      run: |
        mypy planetscope_py/
      continue-on-error: true  # Allow mypy to fail for now during development
   
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=planetscope_py --cov-report=xml --cov-report=term-missing -v
   
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
 
  security:
    name: Security scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
   
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
   
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
   
    - name: Security scan with Safety
      run: |
        safety check --json || echo "Safety check completed with warnings"
      continue-on-error: true
   
    - name: Security scan with Bandit
      run: |
        bandit -r planetscope_py/ -f json || echo "Bandit scan completed with warnings"
      continue-on-error: true

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
   
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
   
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
   
    - name: Build package
      run: python -m build
   
    - name: Check package
      run: twine check dist/*
   
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-packages
        path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-packages
        path: dist/
   
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1